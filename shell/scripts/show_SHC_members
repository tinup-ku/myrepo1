#!/bin/bash
get_key ()
{
  . /.key
  echo ${F5_fqdn}|grep 'dev' >/dev/null
  if [[ "$?" = "0" ]]
  then
    key=${dev}
  else
    key=${prod}
  fi
}

get_captain ()
{
  get_key ${F5_fqdn} 2>/dev/null
  captain=`curl -k -u admin:${key} https://${F5_fqdn}:8089/services/shcluster/captain/info 2>/dev/null|grep "label"| awk -F'>' '{print $2}'|sed 's/<\/s:key//g'`

  [[ -z ${captain} ]] && {
     echo "Search Head Deployer $(uname -n): ${F5_fqdn} | captaincy unidentified. Abort."
     exit
  }
  search_peer=${captain}
}

get_search_peers ()
{
  search_peers=`{
  curl -k -u admin:${key} https://${captain}:8089/services/shcluster/captain/members|grep "mgmt_uri"
  } 2>/dev/null|sed -e 's/<s:key name="mgmt_uri">https:\/\///g' -e 's/:8089<\/s:key>//g'`

  [[ -z ${search_peers} ]] && {
     echo "Search Head Deployer $(uname -n): ${F5_fqdn} | Search Head members unidentified. Abort."
     exit
  }

  for sh_ in $search_peers
  do
    echo "${sh_}"
  done
  search_peers=$(echo ${search_peers}|sed 's/ /,/g')
}



echo -n "Enter SH cluster F5 (ie, splunk-admin.mycorp.com)? "
read F5_fqdn
get_key 2>/dev/null
captain=`curl -k -u admin:${key} https://${F5_fqdn}:8089/services/shcluster/captain/info 2>/dev/null|grep "label"| awk -F'>' '{print $2}'|sed 's/<\/s:key//g'`
echo "${F5_fqdn} captain --> $captain"
echo -n "${F5_fqdn} $captain was elected on "
{
  curl -ku admin:${key} https://${F5_fqdn}:8089/services/shcluster/status?advanced=1?|grep elected_captain|awk -F'>' '{print $2}'|awk -F'<' '{print $1}'
} 2>/dev/null

echo
echo "Below are list of Search Heads in ${F5_fqdn}:"
get_search_peers

