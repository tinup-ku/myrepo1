#!/bin/ksh
########################################################################################
# This script converts splunk local, ie, root|splunk, to AD service account
# DEV/QA: ser_act.dev
# PrePROD/PROD: ser_act.prod
# Based on
# https://docs.splunk.com/Documentation/Splunk/7.2.3/Admin/RunSplunkassystemdservice#Configure_systemd_manually
# Also ${SPLUNK_ETC}/splunk-launch.conf is also updated with
# SPLUNK_DB=/opt/splunkindex_data
# SPLUNK_DBHOT=/opt/splunkindex_data, and
# SPLUNK_OS_USER=ser_act.prod in PrePROD + PROD, or
# SPLUNK_OS_USER=ser_act.dev in TEST/DEV/QA
########################################################################################
# Written by user1 | T.O.S
SPLUNK_ETC=/opt/splunk/etc
SPLUNK_BIN=/opt/splunk/bin
env_=`uname -n|grep -o '...$'`
RAM=`grep MemT /proc/meminfo|awk '{$2/=1048576;printf "%.2fG\n",$2}'`


case ${env_} in
   pdv | bdv ) uid=ser_act.dev
               gid=unx_60231_splunk_admin_dev
               ;;
   some_loc | loc2 | loc3 | loc4 ) uid=ser_act.prod
               gid=unx_9998_access
               ;;
                * )
                    case `uname -n` in
                              ser2* ) uid=ser_act.prod
                                     gid=unx_9998_access
                                     ;;
                        cud*| cut* ) uid=ser_act.dev
                                     gid=unx_9998_access
                                     ;;
                    esac

               ;;
esac


{

convert_to_service_account ()
{
  # Convert splunk to service account
  echo "Convert /opt/splunk to service account: ${uid}:${gid}"

  echo "Updating ${SPLUNK_ETC}/splunk-launch.conf"
  # Add SPLUNK_DB=/opt/splunkindex_data and /opt/splunkindexhot_data
  grep '^SPLUNK_DB=/opt/splunkindex_data' ${SPLUNK_ETC}/splunk-launch.conf >/dev/null
  [[ "$?" != "0" ]] && sed -i '/SPLUNK_DB=/aSPLUNK_DB=/opt/splunkindex_data\nSPLUNK_DBHOT=/opt/splunkindex_data' ${SPLUNK_ETC}/splunk-launch.conf
  # Remove existing SPLUNK_OS_USER=
  sed -i '${/SPLUNK_OS_USER/d;}' ${SPLUNK_ETC}/splunk-launch.conf

  # Add SPLUNK_OS_USER=${uid} to ${SPLUNK_ETC}/splunk-launch.conf 
  echo -e "\nSPLUNK_OS_USER=${uid}" >> ${SPLUNK_ETC}/splunk-launch.conf


  echo "Changing /opt/splunk UID:GID to ${uid}:${gid}"
  [[ -d /opt/splunk ]] && cd /opt && chown -R ${uid}:${gid}  splunk

  [[ ! -d /opt/splunkindex_data ]] && mkdir -p /opt/splunkindex_data
  chown -R ${uid}:${gid} /opt/splunkindex_data

  # Remove local splunk entry.
  echo "Remove splunk local entry in passwd,group,shadow, and gshadow"
  sed -i '/^splunk/d' /etc/passwd /etc/group /etc/shadow /etc/gshadow

  chmod 500 /opt/splunk/bin/splunk
  chmod u+s /opt/splunk/bin/splunk
  
  # This ONLY applies to RHEL7 AND Splunk 7.2.x
  [[ `uname -r|awk -F. '{print $1}'` -ge 3 ]] && {

     grep 'User=ser_act.prod' /etc/systemd/system/Splunkd.service >/dev/null
     [[ "$?" != "0" ]] && {
        {
          # NOTE: Splunkd.service changed on version 9.0.4.1
          cat<<END
#This unit file replaces the traditional start-up script for systemd
#configurations, and is used when enabling boot-start for Splunk on
#systemd-based Linux distributions.

[Unit]
Description=Systemd service file for Splunk, generated by 'splunk enable boot-start'
After=network-online.target
Wants=network-online.target

[Service]
Type=simple
Restart=always
ExecStart=/opt/splunk/bin/splunk _internal_launch_under_systemd
KillMode=mixed
KillSignal=SIGINT
TimeoutStopSec=360
LimitNOFILE=262144
LimitNPROC=131072
LimitRTPRIO=99
SuccessExitStatus=51 52
RestartPreventExitStatus=51
RestartForceExitStatus=52
User=${uid}
Group=${gid}
Delegate=true
CPUShares=1024
MemoryLimit=${RAM}
PermissionsStartOnly=true
StartLimitInterval=30
StartLimitBurst=5
RestartSec=10
ExecStartPost=-/bin/bash -c "chown -R ${uid}:${gid} /sys/fs/cgroup/cpu/system.slice/%n"
ExecStartPost=-/bin/bash -c "chown -R ${uid}:${gid} /sys/fs/cgroup/memory/system.slice/%n"

[Install]
WantedBy=multi-user.target

END
        } > /etc/systemd/system/Splunkd.service
        echo "Enable Splunkd.service"
        systemctl enable Splunkd
     }
  }
}

stop_splunk ()
{
  # Check if init or SysV
  if [[ -f /etc/init.d/splunk ]]
  then
     service splunk stop
  else
     systemctl stop Splunkd
  fi
}

########
# MAIN
########

[[ ! -d /${uid} ]] && {
    echo "Creating ${uid} home: /${uid}"
    mkdir /${uid}
    chown ${uid}:${gid} /${uid}
 }

cd ${SPLUNK_BIN} && {
   splunk_setting=$(ls -l splunk|awk '{print $1}')
   [[ "$splunk_setting" = '-r-s------' ]] && {
      echo "Splunk service account already setup"
      ls -l splunk
      exit
   }
}

# Check if ser_act.prod is seen on search head
#/opt/quest/bin/vastool user checkaccess ${uid} |grep '^ALLOWED' >/dev/null
#user=`sssctl user-checks ${uid}|awk '/homeDirectory/{print $NF}'`
#echo ${user}|grep "${uid}" >/dev/null
id ${uid} >/dev/null 2>&1
if [[ "$?" = "0" ]]
then
  echo "Stop Splunk then convert to service account ${uid}:${gid}"
  stop_splunk
  # Remove /opt/splunk/var/run/splunk/splunkd.pid since it's root owned.
  [[ -f /opt/splunk/var/run/splunk/splunkd.pid ]] && rm -f /opt/splunk/var/run/splunk/splunkd.pid
  stop_splunk
  echo "convert_to_service_account"
  convert_to_service_account
  echo "Verify: `ls -ld /opt/splunk`"
  echo "Verify: `ls -ld /opt/splunk/bin/splunk`"
else
  echo "${uid}:${gid} is not visible in `uname -n`. Abort."
  exit
fi
echo
echo "Starting Splunkd.service"
systemctl start Splunkd
sleep 2s
echo "Current Splunkd.service"
systemctl status Splunkd|grep Active
echo -n "Splunkd processes: `pgrep splunkd|wc -l`"
pgrep splunkd
echo
} | tee /root/`basename $0`.OUT
