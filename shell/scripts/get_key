#!/bin/bash

#Add Date to Logging File
adddate(){
    while IFS= read -r line; do
        printf '%s %s %s\n' "`date`" "`uname -n`" "$line";
    done
}

get_key ()
{
  {
    eval `gpg --batch --xyz xyz -d /.splunk` >/dev/null 2>&1
  } 2>/dev/null
  case ${env_} in
         pdv | bdv ) uid=ser_act.dev
                     key=${dev}
                     ;;
   some_loc | loc2 | loc3 ) uid=ser_act.prod
                     key=${prod}
                     ;;
                 * )
                     case `uname -n` in
                               ser2* ) uid=ser_act.prod
                                      key=${prod}
                                      ;;
                         cud*| cut* ) uid=ser_act.dev
                                      key=$dev
                                      ;;
                    esac
                    ;;
  esac
  S2H_CONF="/${uid}/S2H_CONF"
  # Generate MapR Ticket
  if [[ -f /.s2h_mapr.key ]]
  then
    uid_key=`ssh -o StrictHostKeyChecking=no -o BatchMode=yes \
             -i /.s2h_mapr.key SPLUNK_S2H_CLI@passwords.mycorp.com \
             retrieve --systemname USDomain --accountname ${uid}`
    echo ${uid_key}| maprlogin password -out /tmp/$$ >/dev/null
    MAPR_TICKETFILE_LOCATION=/tmp/$$
    # Verify mapr ticket credential
    if [[ -f $MAPR_TICKETFILE_LOCATION ]]
    then
       export MAPR_TICKETFILE_LOCATION=${MAPR_TICKETFILE_LOCATION}
    else
       echo "ERROR: ${MAPR_TICKETFILE_LOCATION} does not exist. Abort" |adddate
       exit
    fi
  else
    echo "ERROR: /.s2h_mapr.key does not exist. Abort." |adddate
    exit
  fi
}

#######################################################################
# check_config_file ()                                                #
# Source ${index}-${sourcetype}.conf and define variables along with  #
# ${TMP} to MapR destination and ${LOG} file for Splunk monitoring    #
#######################################################################
check_config_file ()
{
  get_key
  if [[ -f ${S2H_CONF}/$1 ]]
  then
     echo "Reading ${S2H_CONF}/$1 " |adddate
     . ${S2H_CONF}/$1
     # Set value after reading in ${S2H_CONF} config file
     YYYY=`echo $prevdate|awk -F/ '{print $NF}'`
     MM=`echo ${prevdate}|awk -F/ '{print $1}'`
     DD=`echo ${prevdate}|awk -F/ '{print $2}'`
     YYYYMM=${YYYY}${MM}
     YYYYMMDD=${YYYY}${MM}${DD}
     fileName=${index}-${sourcetype}
     # Setup to send data splunk data in ${TMP} to MapR
     MapR_conf=/opt/mapr/conf/mapr-clusters.conf
     MapR_Cluster_name=`awk '! /^#/{print $1}' ${MapR_conf}`
     # 05/11/2021. Based on
     # https://confluence.mycorp.com/pages/viewpage.action?spaceKey=GDTBDSD&title=MapR+Client+Configuration+Guide
     # commented out line below and replaced w/MAPR_FS="/bdh/raw/eli"
     #MAPR_FS="maprfs://${MapR_Cluster_name}/bdh/raw/eli"
     MAPR_FS="/bdh/raw/eli"
     url=https://${splHost}:8089/services/search/jobs/export

     [[ ! -d ${TMP} ]] && mkdir -p ${TMP} >/dev/null 2>&1
     [[ ! -d ${LOG} ]] && mkdir -p ${LOG} >/dev/null 2>&1

  else
     echo "ERROR: ${S2H_CONF}/${s2h_config_file} does not exist. Abort"|adddate
     exit
  fi
}

{
ls /ser_act.dev/S2H_CONF
echo
echo -n "Enter s2h config filename? "
read file_
echo
check_config_file ${file_}
echo key=$key
echo uid=$uid
echo S2H_CONF=$S2H_CONF
echo index=$index
echo sourcetype=$sourcetype
echo MAPR_FS=${MAPR_FS}
echo custPath=$custPath
echo MAPR_TICKETFILE_LOCATION=$MAPR_TICKETFILE_LOCATION
echo "Content of MAPR_TICKETFILE_LOCATION"
echo "##############"
cat $MAPR_TICKETFILE_LOCATION
echo "##############"

echo "Testing ${MAPR_FS}/${custPath}"|adddate
#echo "Testing ${MAPR_FS}/${index}/${sourcetype}"
echo
hadoop fs -ls ${MAPR_FS}/${custPath}|tail -1
} 2>&1 | tee `basename $0.out`
