#!/bin/bash
###############################################################################
# Refer to
# https://community.splunk.com/t5/Deployment-Architecture/Using-REST-API-load-balancing-in-a-Search-Head-Cluster-why-are/m-p/262272
# https://www.splunk.com/en_us/blog/tips-and-tricks/splunk-rest-api-is-easy-to-use.html?301=/blog/2011/08/02/splunk-rest-api-is-easy-to-use.html
###############################################################################
bold_yellow="\e[1m\e[33m"
red=$(tput setaf 1)
green=$(tput setaf 2)
reset_color="\e[0m"

get_sessionKey ()
{
  sessionKey=$(
  {
    curl -k -u ${user}:${key} https://${node_fqdn}:8089/services/auth/login -d username=${user} -d password=$key
  } 2>/dev/null | grep sessionKey|awk -F'<sessionKey>|</sessionKey>' '{print $2}')
}

get_sid ()
{
  sid=$(
  {
   curl -k -u ${user}:${key} https://${node_fqdn}:8089/services/search/jobs -d search="search index=sne|stats count by splunk_server|head" -d earliest_time="-15m@m" -d latest_time="-0m@m"
   #curl -k -u ${user}:${key} https://${node_fqdn}:8089/services/search/jobs -d search="search index=bpi|stats count by splunk_server|head" -d earliest_time="-15m@m" -d latest_time="-0m@m"
   #curl -k -u ${user}:${key} https://${node_fqdn}:8089/services/search/jobs -d search="search index=secops*|stats count by splunk_server|head" -d earliest_time="-15m@m" -d latest_time="-0m@m"
   #curl -k -u ${user}:${key} https://${node_fqdn}:8089/services/search/jobs -d search="search index=* | stats count by index" -d earliest_time="-15m@m" -d latest_time="-0m@m"
index=* | stats count by index
  } 2>/dev/null | grep 'sid'|awk -F'<sid>|</sid>' '{print $2}')
}

get_dispatchState ()
{
  dispatchState=$(
  {
    curl -k -u ${user}:${key} https://${node_fqdn}:8089/services/search/jobs/$1
  } 2>/dev/null | grep 'dispatchState'|awk -F'">|</' '{print $2}')
}

get_results ()
{
  echo -e "sid=${bold_yellow}${1}${reset_color}"
  results=$(
  {
    curl -k -u ${user}:${key} https://${node_fqdn}:8089/services/search/jobs/${1}/results --get -d output_mode=csv
  } 2>/dev/null )
}

show_SH_list_PROD ()
{
cat<<END

Here's list of F5 splunk-extracts.mycorp.com Search Heads:

ser14344some_loc: guid = CD87969B-F6B9-4E96-8F0E-E0F77BC23E4D
ser14345loc2: guid = 069E2ED0-DAE7-4735-9313-6BECAD88014C
ser14352loc2: guid = 398D3C32-0912-4080-8CC7-63F9A6DB22E6

END
read -p "Enter search head name or F5 (splunk-extracts.mycorp.com)? " node
}

##########
# M A I N
##########
echo -en "Enter your ${bold_yellow}first.last${reset_color}: "
read user
read -sp "Password: " key

show_SH_list_PROD

while [ 1 ]
do
  echo $node|grep -q 'splunk'
  if [[ "$?" = "0" ]]
  then
     node_fqdn=$node
  else
     node_fqdn=$(host ${node}|awk '{print $1}')
     nc -vz ${node} 8089 >/dev/null 2>&1
     [[ "$?" != "0" ]] && {
        echo "${node}: splunkd's DOWN"
        show_SH_list_PROD
     }
  fi
  echo "1. Authenticating ${user} via ${node}: "
  get_sessionKey
  [[ -z ${sessionKey} ]] && echo "User: ${user} | Authentication failed. Abort" && exit
  
  echo "sessionKey=${sessionKey}"
  echo
  echo "2. Running search and getting sid ...."

  get_sid
  echo -en "sid=${bold_yellow}${sid}${reset_color}"
  echo
  echo -e "Retrieve ad-hoc search status with sid: ${bold_yellow}${sid}${reset_color}"
  echo
  echo "3. Checking search status...."
  get_dispatchState ${sid}
  echo dispatchState=${dispatchState}
  total_secs=""
  while [[ "${dispatchState}" != "DONE" ]] 
  do
    #echo "let's wait for 1 second ..."
    get_dispatchState ${sid}
    sleep 1s
    total_secs=`expr $total_secs + 1`
    echo "${total_secs}s dispatchState=${dispatchState}"
  done
  echo "Total secs: $total_secs"
  echo
  echo "4. Getting search results ..."
  echo
  get_results ${sid}
  #echo "results=`echo ${results}|head -1`"
  echo "results=`echo ${results}`"
  echo

  echo -en "Try again with F5 LB https://${bold_yellow}$node${reset_color}:8089 (${bold_yellow}Y${reset_color}|${green}N${reset_color}, or ${red}Q${reset_color})uit? "
  read ans
  echo
  case $ans in
       Y|y )
            continue
            ;;
       N|n )
            show_SH_list_PROD
            ;;
         * )
            echo "Good Bye"
            exit
            ;;
    esac
done
