#!/bin/bash
################################################################################
# https://jira.mycorp.com/browse/TOS-19015
# https://docs.splunk.com/Documentation/Splunk/9.0.4/Admin/BackupKVstore
# This script performs the following tasks:
# 1. In ${KVSTORE_BACKUP}, identify all file older than 2 days then move them
#    to ${KVSTORE_ARCHIVE}
# 2. In ${KVSTORE_ARCHIVE}, clean up files older than 2 days which came from
#    1. in previous days.
################################################################################
# Written by user1 | T O S Platform Splunk
SPLUNK_BIN=/opt/splunk/bin
env_=`uname -n|grep -o '...$'`
date_=$(date '+%a%H%M_%m%d%Y')
KVSTORE_BACKUP=/opt/splunkindex_data/kvstorebackup
KVSTORE_ARCHIVE=${KVSTORE_BACKUP}/kvstore_ARCHIVE
KVSTORE_LOG=/var/tmp/LOG/Kvstore

case ${env_} in
   pdv | bdv ) uid=ser_act.dev
               key=$dev
               ;;
   some_loc | loc2 | loc3 | loc4 ) uid=ser_act.prod
               key=$prod
               ;;
           * )
               case `uname -n` in
                   ser2* ) uid=ser_act.prod
                           gid=unx_9998_access
                           key=$prod
                           ;;
                   cud*| cut* ) uid=ser_act.dev
                                  gid=unx_60231_splunk_admin_dev
                                  key=$dev
                           ;;
               esac
               ;;
esac


[[ ! -d ${KVSTORE_ARCHIVE} ]] && mkdir -p ${KVSTORE_ARCHIVE}
[[ "$(whoami)" = "root" ]] && echo "Run as ${uid} ONLY. Abort" && exit
{
  # 1.
  date
  echo "1. Moving recent kvstore backups to ${KVSTORE_ARCHIVE}:"
  cd ${KVSTORE_BACKUP} && {
     # generate a list of files > 2 days
     file_list=$(find . -maxdepth 1 -type f -name "$(uname -n)*" ! -mmin -2880 -exec ls -d {} + )
     if [[ ! -z "${file_list}" ]]
     then
        echo "${KVSTORE_BACKUP}, below are files older than 3 days:"
        echo
        echo "${file_list}"
        echo "Moving above to ${KVSTORE_ARCHIVE}"
        find ${file_list} |cpio -pd ${KVSTORE_ARCHIVE} >/dev/null
        [[ "$?" = "0" ]] && find ${file_list} -maxdepth 1 -type f ! -mmin -2880 -exec rm -f {} +
        echo "1. COMPLETED."
     else
        echo "No file to move to ${KVSTORE_ARCHIVE}"
     fi
  }

  # 2.
  echo
  date
  echo "2. Cleaning up old kvstore backups in ${KVSTORE_ARCHIVE}"
  cd ${KVSTORE_ARCHIVE} && {
    find . -type d -name "kvstore_ARCHIVE" -exec rm -rf {} +
    # generate a list of files > 1 day (1440 mins)
    file_list=$(find . -type f -name "*$(uname -n)*" ! -mmin -1440 -exec ls -d {} + )

    if [[ ! -z "${file_list}" ]]
    then
       echo "${KVSTORE_ARCHIVE}, below are files older than 1 day will be removed:"
       echo "${file_list}"
       echo
       find ${file_list} ! -mmin -1440 -exec rm -f {} +
       echo "2. COMPLETED."
    else
       echo "NONE FOUND"
    fi
  }
  date
} | tee ${KVSTORE_LOG}/`basename $0`_${date_}.log
