#!/bin/bash
###############################################################################
# Refer to
# https://community.splunk.com/t5/Deployment-Architecture/Using-REST-API-load-balancing-in-a-Search-Head-Cluster-why-are/m-p/262272
# https://www.splunk.com/en_us/blog/tips-and-tricks/splunk-rest-api-is-easy-to-use.html?301=/blog/2011/08/02/splunk-rest-api-is-easy-to-use.html
###############################################################################
bold_yellow="\e[1m\e[33m"
reset_color="\e[0m"

get_sessionKey ()
{
  sessionKey=$(
  {
    curl -k -u ${user}:${key} https://${node_fqdn}:8089/services/auth/login -d username=${user} -d password=$key
  } 2>/dev/null | grep sessionKey|awk -F'<sessionKey>|</sessionKey>' '{print $2}')
}

get_sid ()
{
  sid=$(
  {
    curl -k -u ${user}:${key} https://${node_fqdn}:8089/services/search/jobs -d search="search index=rrbus|stats count by splunk_server|head" -d earliest_time="-15m@m" -d latest_time="-0m@m"
#  curl -k -u ${user}:${key} https://${node_fqdn}:8089/services/search/jobs -d search="search index=sne|stats count by splunk_server|head" -d earliest_time="-15m@m" -d latest_time="-0m@m"
   #curl -k -u ${user}:${key} https://${node_fqdn}:8089/services/search/jobs -d search="search index=bpi|stats count by splunk_server|head" -d earliest_time="-15m@m" -d latest_time="-0m@m"
   #curl -k -u ${user}:${key} https://${node_fqdn}:8089/services/search/jobs -d search="search index=secops*|stats count by splunk_server|head" -d earliest_time="-15m@m" -d latest_time="-0m@m"
   #curl -k -u ${user}:${key} https://${node_fqdn}:8089/services/search/jobs -d search="search index=* | stats count by index" -d earliest_time="-15m@m" -d latest_time="-0m@m"
index=* | stats count by index
  } 2>/dev/null | grep 'sid'|awk -F'<sid>|</sid>' '{print $2}')
}

get_dispatchState ()
{
  dispatchState=$(
  {
    curl -k -u ${user}:${key} https://${node_fqdn}:8089/services/search/jobs/$1
  } 2>/dev/null | grep 'dispatchState'|awk -F'">|</' '{print $2}')
}

get_results ()
{
  echo -e "sid=${bold_yellow}${1}${reset_color}"
  results=$(
  {
    curl -k -u ${user}:${key} https://${node_fqdn}:8089/services/search/jobs/${1}/results --get -d output_mode=json&count=0
  } 2>/dev/null )
}

show_SH_list_PROD ()
{
cat<<END

Here's list of PROD Search Heads:

s3137some_loc guid = E802E0B4-41BC-48AB-BCFE-4CCCB05303B5
s3138some_loc guid = 9D14D6C0-1390-442F-BC82-3A13DDDDFAF4
s3139some_loc guid = 95329FDA-98EA-4BF8-BA0D-36C776B3BCCE
s3140some_loc guid = 70058347-BB9E-43BA-834B-6FDA6C8156E5 Adhoc
s3141some_loc guid = 6EC5A35B-EE88-487A-8197-83633BD40E12 Adhoc
s3142some_loc guid = 2958F185-44A3-4223-9DC7-59D067050931 Adhoc
s0166loc3 guid = A2079A61-25BF-4949-AA5B-3F19CBB3176E Adhoc
s0167loc3 guid = DA94BB99-4D16-4240-8AA8-E940045E2238 Adhoc
s3144some_loc guid = 699B2E73-F656-4EF5-AE56-C88AEC2C138D
s3145some_loc guid = 4D95AAAD-122D-49D7-8B68-D0545CEDB66A
s3146some_loc guid = CC45506E-3A95-4F57-AB80-14E72387383F Adhoc
s3147some_loc guid = 391DE304-57B4-4DB3-AAA1-77359317D390 Adhoc
s3148some_loc guid = DB03F258-E8DA-442A-A3DB-72D5BF69D26F Adhoc
s3137loc2 guid = 23892FB2-8F71-4E3C-80B9-C5494845E088
s3138loc2 guid = 08B9B322-4347-4D18-851F-AB7855BD048E
s3139loc2 guid = A01602DF-D31D-4E9E-AD02-E67C2F635B60
s3140loc2 guid = B21043BC-EF43-488B-90C3-031E3895D829 Adhoc
s3141loc2 guid = CEECB917-D21F-4C5B-A528-74CF19C949E5 Adhoc
s3142loc2 guid = 19A033A4-FA69-4EED-9FD9-F965B60366DB
s3143loc2 guid = F63FE97A-2020-4395-B5A6-360237B058C8
s3145loc2 guid = 6D1A72C2-BE35-4983-9D7E-69A8A485C0DC Adhoc
s3146loc2 guid = 47F05508-6D4B-4F61-A298-ECAF35BE0AE0 Adhoc
s0171loc3 guid = AF839504-8A6A-47E2-873F-0D250503CA48
s0172loc3 guid = 070FB674-3FA4-44C0-AFC3-83829CEB469B
s0173loc3 guid = BC7C5BA4-39A5-46A1-A2ED-A243E2574F06
s0189loc3 guid = 85ADEE53-347B-4600-9FDB-E409B99C8513
s0191loc3 guid = 92DF7428-FD0A-4826-9453-70F6D1350D53
s0192loc3 guid = 1F42497A-E4EE-4B39-9061-627ABAF6E549
s0193loc3 guid = 267D6166-4868-47D8-9F86-012061D2167A

END
read -p "Enter search head name or F5 (splunk-admin.mycorp.com)? " node
}

##########
# M A I N
##########
echo -en "Enter your ${bold_yellow}first.last${reset_color}: "
read user
read -sp "Password: " key
#read -p "Password: " key

show_SH_list_PROD

while [ 1 ]
do
  echo $node|grep -q 'splunk'
  if [[ "$?" = "0" ]]
  then
     node_fqdn=$node
  else
     node_fqdn=$(host ${node}|awk '{print $1}')
     nc -vz ${node} 8089 >/dev/null 2>&1
     [[ "$?" != "0" ]] && {
        echo "${node}: splunkd's DOWN"
        show_SH_list_PROD
     }
  fi
  echo "Authenticating ${user} via ${node}: "
  get_sessionKey
  [[ -z ${sessionKey} ]] && echo "User: ${user} | Authentication failed. Abort" && exit
  
  echo "sessionKey=${sessionKey}"
  echo
  echo "Running search and getting sid ...."

  get_sid
  echo -en "sid=${bold_yellow}${sid}${reset_color}"
  echo
  echo -e "Retrieve ad-hoc search status with sid: ${bold_yellow}${sid}${reset_color}"
  get_dispatchState ${sid}
  echo dispatchState=${dispatchState}
  total_secs=""
  while [[ "${dispatchState}" != "DONE" ]] 
  do
    #echo "let's wait for 1 second ..."
    get_dispatchState ${sid}
    sleep 1s
    total_secs=`expr $total_secs + 1`
    echo "${total_secs}s dispatchState=${dispatchState}"
  done
  echo "Total secs: $total_secs"
  echo
  echo "Getting results ..."
  echo
  get_results ${sid}
  echo "results=`echo ${results}|head -1`"
  echo

  read -p "Try again(Y|N)? " ans
  case $ans in
       Y|y )
            continue
            ;;
       N|n )
            show_SH_list_PROD
            ;;
         * )
            echo "Good Bye"
            exit
            ;;
    esac
done
