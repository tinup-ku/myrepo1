#!/bin/bash
##################################################################################
# https://jira.mycorp.com/browse/TOS-10248
# This is to remove a Search Head from Search Head Cluster.
# Based on 
# https://docs.splunk.com/Documentation/Splunk/7.2.6/DistSearch/Removeaclustermember 
##################################################################################
# user_ | T O S Platform Splunk
bold_yellow="\e[1m\e[33m"
green=$(tput setaf 2)
red=$(tput setaf 1)
reset_color="\e[0m"
SPLUNK_BIN=/opt/splunk/bin
SPLUNK_LOCAL=/opt/splunk/etc/system/local

rotate_char() {
   chars=( '←' '↑' '→' '↓' )
   for sec in {1..60}
   do
     echo -ne "${green}${chars[i++ % ${#chars[@]}]}"
     sleep 1
     echo -ne "\b${reset_color}"
   done
}

print_dots ()
{
  case $1 in
   1 ) dot='.';;
   2 ) dot='..';;
   3 ) dot='...';;
   4 ) dot='....';;
   5 ) dot='.....';;
  esac
}


echo -n "Enter a SH nodename? "
read search_head
{
eval `gpg --batch --xyz xyz -quiet --no-verbose -d /.splunk` >/dev/null 2>&1
} 2>/dev/null
env_=`echo ${search_head}|grep -o '...$'`

case ${env_} in
   pdv | bdv ) uid=ser_act.dev
               gid=unx_60231_splunk_admin_dev
               key=${dev}
               ;;
   some_loc | loc2 | loc3 | loc4 ) uid=ser_act.prod
                           gid=unx_9998_access
                           key=${prod}
                           ;;
                 * )
                     case ${search_head} in
                           ser2* )
                                uid=ser_act.prod
                                gid=unx_9998_access
                                fqdn="us.global.mycorp.com"
                                key=${prod}
                                ;;
                            cud*| cut* )
                                uid=ser_act.dev
                                gid=unx_60231_splunk_admin_dev
                                fqdn="us.global.mycorp.com"
                                key=${dev}
                                ;;
                     esac
                     ;;
esac
# Identify all members in the cluster
echo "uid=$uid"
echo "Below are all members in $search_head SH cluster:"
all_search_heads=`ssh -q ${search_head} "su - ${uid} -c \"${SPLUNK_BIN}/splunk show shcluster-status -auth admin:${key}\"" 2>/dev/null|grep label|awk '{print $NF}'|sort|uniq`
echo all_search_heads=${all_search_heads}

# 
[[ -z "${all_search_heads}" ]] && {
   echo "${search_head}, is splunkd down? Operation Abort."
   exit
}

# Identify captain
captain=`ssh -q ${search_head} "su - ${uid} -c \"${SPLUNK_BIN}/splunk list shcluster-members -auth admin:${key}\"" 2>/dev/null|grep -A1 'is_captain:1'|tail -1|awk -F: '{print $2}'`
echo -e "${bold_yellow}captain=$captain${reset_color}"
# Check captain splunk version
splunk_version=`ssh -q $captain "${SPLUNK_BIN}/splunk -version|awk '{print $2}'" 2>/dev/null`
echo
echo "Captain Splunk version: $splunk_version"

echo -n "Which Search Head you want to remove from its cluster? "
read remove_sh

# Get FQDN
#remove_sh=`host ${remove_sh}|awk '{print $1}'`
echo -e "Removing ${bold_yellow}${remove_sh}${reset_color} from SHC"
remove_sh_mgmt_uri=`ssh -q $captain  "show_shcluster-status 2>/dev/null|grep ${remove_sh}|grep mgmt_uri|awk '{print \$NF}'"`
remove_sh_mgmt_uri=`echo $remove_sh_mgmt_uri|awk '{print $NF}'`
echo remove_sh_mgmt_uri=$remove_sh_mgmt_uri

echo -e "Removing ${bold_yellow}${remove_sh}${reset_color} from the captain, ${bold_yellow}$captain${reset_color}"
#ssh $captain  "su - ${uid} -c \"${SPLUNK_BIN}/splunk remove shcluster-member -mgmt_uri https://${remove_sh}:8089 -auth admin:${key}\"" 2>/dev/null
ssh $captain  "su - ${uid} -c \"${SPLUNK_BIN}/splunk remove shcluster-member -mgmt_uri ${remove_sh_mgmt_uri} -auth admin:${key}\"" 2>/dev/null
echo
echo "Resync'ng kvstore on captain $captain"
ssh -q $captain "/usr/local/bin/resync_kvstore" 2>/dev/null
echo
echo "Let's wait for 5 mins before checking search head and its kvstore status"
for min in {1..5}
do
 print_dots $min
 echo -n "`date` $min $dot"
 rotate_char
 echo
done

echo "Current Search Head cluster status:"
ssh -q $captain  "show_shcluster-status 2>/dev/null|grep 'label'" 2>/dev/null
echo
echo -n "Hit RETURN to continue"
read
echo "Current kvstore status"
ssh -q $captain "show_kvstore-status 2>/dev/null|grep 'hostAndPort'|sort -u" 2>/dev/null
echo

echo -n "Hit ENTER to continue... "
read me
echo -e "${bold_yellow}------------------------------------------------"
cat<<END

In order to avoid sending False alerts or duplicated search results, 

Final steps on ${remove_sh}:
1. As ${uid},
   cd ${SPLUNK_LOCAL}
   sed -i 's/disabled = 0/disabled = 1/g' server.conf
   Or
   ${SPLUNK_BIN}/splunk disable shcluster-config
   
2. Disable/stop splunk@boot on  ${remove_sh} via 
   systemctl disable Splunkd
   systemctl stop Splunkd
3. In ${SPLUNK_BIN}, rename splunk to splunk.DISABLED
   cd ${SPLUNK_BIN}
   mv -f splunk splunk.DISABLED
4. In ${SPLUNK_LOCAL}, rename server.conf server.conf.DISABLED
   cd ${SPLUNK_LOCAL}
   4.1. mv -f server.conf server.conf.DISABLED
   4.2. mv -f authentication.conf authentication.conf.DISABLED
5. In $CLUSTER, comment out the search head removed.

END
echo -e "------------------------------------------------${reset_color}"
