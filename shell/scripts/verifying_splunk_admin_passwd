#!/bin/ksh
# This is to change splunk admin password which was discovered via FND-12783
SPLUNK=/opt/splunk
SPLUNK_BIN=${SPLUNK}/bin
#cat .splunk | gpg -c --batch --passphrase --option  -o .splunk.gpg -
#eval `gpg --batch --passphrase --option -d /.splunk` >/dev/null 2>&1
uid=`ls -ld ${SPLUNK}|awk '{print $3}'`


get_hostname_chars ()
{
hostname_=`uname -n`
# Check if server is in Dallas or other
# IaaS or phyiscal in DC4
# IaaS:
#   - PROD: ser24-xxxxxx
#   - DEV/QA: cud4-xxxxxx
# Physical:
#   - PROD: s0029loc3
#   - DEV/QA/TEST: s0029tdv | s0029tdt
{
eval `gpg --batch --xyz xyz -d /.splunk` >/dev/null 2>&1
} 2>/dev/null
first_four_chars=`echo ${hostname_}|grep -o '^....'`
first_char=`echo ${first_four_chars}|grep -o '^.'`
third_char=`echo ${first_four_chars}|cut -c3`
fourth_char=`echo ${first_four_chars}|grep -o '.$'`
}

verify_admin_passwd ()
{
   case ${uid} in
      splunk | root      )
                     ${SPLUNK_BIN}/splunk login  -auth admin:${before}
                     ;;
      ser_act.prod )
                     su - ${uid} -c "${SPLUNK_BIN}/splunk login -auth admin:${prod}"
                     ;;
      ser_act.dev  )
                     su - ${uid} -c "${SPLUNK_BIN}/splunk login -auth admin:${dev}"
                     ;;
                       * )
                     echo "Splunk UID is ${uid}. Abort."
                     exit
                     ;;
   esac
}

get_hostname_chars
if [[ "${first_char}" = "c" && "${third_char}" = "p" && "${fourth_char}" = "4" ]]
then
   verify_admin_passwd
else
    case ${hostname_} in
         *loc3 | *some_loc | *loc2 | *pdv | *bdv )
                             verify_admin_passwd
                             ;;
                          * )
                             echo "${hostname_} is not ending with *loc3 | *some_loc | *loc2 | *pdv | *bdv. Abort"
                             exit
                             ;;
    esac
fi

