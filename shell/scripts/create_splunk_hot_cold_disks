#!/bin/bash
######################################################################################
#---------------------------------------
# https://jira.mycorp.com/browse/SED-366
#---------------------------------------
# This script creates splunk hot+cold LVM's vgs, lvs and pvs:
# For example:
# [root@cud2c-005641 ~]# vgs|egrep 'hot|cold'
# coldvg     4   1   0 wz--n-    1.95t      0
# hotvg      1   1   0 wz--n- <500.00g      0
#
# [root@cud2c-005641 ~]# lvs|egrep 'hot|cold'
# coldlv   coldvg   -wi-ao----    1.95t
# hotlv    hotvg    -wi-ao---- <500.00g    
#
#[root@cud2c-005641 ~]# pvs|egrep 'hot|cold'
# /dev/sda1  hotvg    lvm2 a--  <500.00g      0
# /dev/sdc1  coldvg   lvm2 a--  <500.00g      0
# /dev/sdd1  coldvg   lvm2 a--  <500.00g      0
# /dev/sdf1  coldvg   lvm2 a--  <500.00g      0
# /dev/sdg1  coldvg   lvm2 a--  <500.00g      0
#
# Below are disks provisioned for each new RHEL9 DEV indexer:
# Disk /dev/sdd: 500 GiB, 536870912000 bytes, 1048576000 sectors
# Disk /dev/sdf: 500 GiB, 536870912000 bytes, 1048576000 sectors
# Disk /dev/sdg: 500 GiB, 536870912000 bytes, 1048576000 sectors
# Disk /dev/sdc: 500 GiB, 536870912000 bytes, 1048576000 sectors
# Disk /dev/sde: 500 GiB, 536870912000 bytes, 1048576000 sectors
# 
# DEV Control server, cud2c-005641, $CLUSTER
#GROUP:New_RHEL9_PDC1_DEV_indexers
#cud1c-005705
#cud1c-005706
#cud1c-005707
#cud1c-005708
#cud1c-005709
#GROUP:New_RHEL9_PDC3_DEV_indexers
#cud2c-005638
#cud2c-005639
#cud2c-005640
#cud2c-005641
#cud2c-005642
#LUMP:New_RHEL9_All_PDC13_DEV_indexers
#New_RHEL9_PDC1_DEV_indexers
#New_RHEL9_PDC3_DEV_indexers
######################################################################################
# Written by user1 | TOS Platform S P L U N K
date_=$(date '+%a%H%M_%m%d%Y')

[[ ! -d /opt/splunkindex_data ]] && mkdir -p /opt/splunkindex_data
[[ ! -d /opt/splunkindexhot_data ]] && mkdir -p /opt/splunkindexhot_data

# Pick the first drive for Splunk Hot
splunk_hot_disk=`fdisk -l|grep '/dev/sd'|grep '500 GiB'|head -1|awk '{print $2}'|sed 's/://g'`
splunk_hot_disk_pv=`echo ${splunk_hot_disk}1`
# The remain 4 drives are assigned to Splunk Cold
splunk_cold_disk=`fdisk -l|grep '/dev/sd'|grep '500 GiB'|tail -4|awk '{print $2}'|sed 's/://g'`

splunk_cold_disk=`{
for m in $splunk_cold_disk
do
  echo -n "$m "
done
echo
}`

splunk_cold_disk_pv=`{
for n in $splunk_cold_disk
do
  echo -n "${n}1 "
done
echo
}`

echo "splunk_hot_disk=$splunk_hot_disk"
echo "splunk_hot_disk_pv=$splunk_hot_disk_pv"
echo
echo "splunk_cold_disk=$splunk_cold_disk"
echo "splunk_cold_disk_pv=$splunk_cold_disk_pv"


partion_disk_and_create_pv ()
{
 echo "Formatting $1"
 parted -s $1 mklabel gpt
 parted -s -- $1 unit TB mkpart primary ext4 0% 100%
 partprobe $1
 parted $1 print
 echo "Creating Physical Volume ${1}1"
 pvcreate ${1}1
 echo
}

create_vg ()
{
 echo "Creating volume group, $@"
 # vgcreate vg_name /dev/sdb1 /dev/sdc1 /dev/sdd1
 vgcreate $@
}

create_lvm_and_fs ()
{
 echo "Creating lvm: $1"
 # $1: LV name
 # $2: VG name
 lvcreate -l 100%FREE -n $1 $2
 echo "Creating file system: /dev/$2/$1"
 mkfs.ext4 -m 1 /dev/$2/$1
}
##########
# M A I N
##########

# Create Volume groups: hotvg, and coldvg
# Format and create Physical Volumes
pvs|grep hotvg >/dev/null
[[ "$?" != "0" ]] && {
   for disk in ${splunk_hot_disk} ${splunk_cold_disk}
   do
    partion_disk_and_create_pv ${disk}
   done

   create_vg hotvg ${splunk_hot_disk_pv}
   create_vg coldvg ${splunk_cold_disk_pv}
   # Create Logical Volumes: splunklv, hotlv, and coldlv
   create_lvm_and_fs hotlv hotvg
   create_lvm_and_fs coldlv coldvg

   # Make a backup /etc/fstab
   [[ -f /etc/fstab ]] && cp -f /etc/fstab.${date_}

   # Update mount table with /opt/splunkindex_data, /opt/splunkindexhot_data
   grep '/dev/hotvg/hotlv' /etc/fstab >/dev/null
   if [ "$?" != "0" ]
   then
      {
      cat<<END
/dev/coldvg/coldlv /opt/splunkindex_data ext4 noatime,errors=remount-ro 1 0
/dev/hotvg/hotlv /opt/splunkindexhot_data ext4 noatime,discard,data=ordered,errors=remount-ro  1 0
END
      } >> /etc/fstab
   else
      echo "/dev/hotvg/hotlv ALREADY DEFINED in /etc/fstab"
   fi

   mount /opt/splunkindex_data
   mount /opt/splunkindexhot_data
}
