#!/bin/bash
###############################################################################
# Refer to
# https://community.splunk.com/t5/Deployment-Architecture/Using-REST-API-load-balancing-in-a-Search-Head-Cluster-why-are/m-p/262272
###############################################################################
bold_yellow="\e[1m\e[33m"
reset_color="\e[0m"

get_sessionKey ()
{
  sessionKey=$(
  {
    curl -k -u ${user}:${key} https://${node_fqdn}:8089/services/auth/login -d username=${user} -d password=$key
  } 2>/dev/null | grep sessionKey|awk -F'<sessionKey>|</sessionKey>' '{print $2}')
}

get_sid ()
{
  sid=$(
  {
   #curl -k -u ${user}:${key} https://${node_fqdn}:8089/services/search/jobs -d search="search index=mycorpcom cf_app_name=mycorp-cet-capability-transfers-api* (sourcetype=mycorp-cet-capability-transfers-api-blue_secure_elilogs OR sourcetype=mycorp-cet-capability-transfers-api-green_secure_elilogs OR sourcetype=mycorp-cet-capability-transfers-api_secure_elilogs OR sourcetype=elilogs) (msg.Service.URL=http://transfersapi.mycorp.com/api/transfer/ach) msg.Results.Message=Success | rename Actor.Cust as cs_username | spath msg |stats count by msg" -d earliest_time="-2m@m" -d latest_time="-0m@m"
   curl -k -u ${user}:${key} https://${node_fqdn}:8089/services/search/jobs -d search="search index=_internal|stats count by splunk_server | head" -d earliest_time="-2m@m" -d latest_time="-0m@m"

#   curl -k -u ${user}:${key} https://${node_fqdn}:8089/services/search/jobs -d search="search index=channelmanagement cf_app_name=shortsalestreamer* cf_space_name=qa-ad00006968 | spath msg.Extended_Fields.ShortSaleModel.Symbol | search msg.Extended_Fields.ShortSaleModel.Symbol=AAPL | stats count by host" -d earliest_time="-5h@h" -d latest_time="-0h@h"

#  curl -k -u ${user}:${key} https://${node_fqdn}:8089/services/search/jobs -d search="search index=channelmanagement cf_app_name=shortsalestreamer* cf_space_name=qa-ad00006968 | spath msg.Extended_Fields.ShortSaleModel.Symbol | search msg.Extended_Fields.ShortSaleModel.Symbol=AAPL | spath msg.Results.Message | stats count by host" -d earliest_time="-5h@h" -d latest_time="-0h@h"
#    curl -k -u ${user}:${key} https://${node_fqdn}:8089/services/search/jobs -d search="searchÂ index=authentication|stats count by splunk_server " -d earliest_time="-15m@m" -d latest_time="-0m@m"
#   curl -k -u ${user}:${key} https://${node_fqdn}:8089/services/search/jobs -d search="search index=aerospike sourcetype=aerospike_audit_logs 'authenticated user'" -d earliest_time="-15m@m" -d latest_time="-0m@m"

  } 2>/dev/null | grep 'sid'|awk -F'<sid>|</sid>' '{print $2}')
}

get_dispatchState ()
{
  dispatchState=$(
  {
    curl -k -u ${user}:${key} https://${node_fqdn}:8089/services/search/jobs/$1
  } 2>/dev/null | grep 'dispatchState'|awk -F'">|</' '{print $2}')
}

get_results ()
{
  echo -e "sid=${bold_yellow}${1}${reset_color}"
  results=$(
  {
    curl -k -u ${user}:${key} https://${node_fqdn}:8089/services/search/jobs/${1}/results --get -d output_mode=csv
  } 2>/dev/null )
}

show_SH_list ()
{
cat<<END

Here's list of QA RestAPI Search Heads:
https://splunk-restapi-qa.dev.mycorp.com
cud1-014765: guid = 6A63475D-03E5-43BF-B2D2-1AF8FD9081E4
cud1-014766: guid = 27384E01-F626-4DE7-AE8A-2FB0D18D2B32
cud1-014767: guid = BBCCAA6D-B82D-4F78-B5D7-7873C9B59D1F
cud2-011028: guid = 985680B0-9C93-4E61-B20C-BE3F13C2B18A
cud2-011029: guid = 7F1A1303-260C-45FF-BAE9-5004567DA3B4

Here's list of QA SH:
https://splunk-qa.dev.mycorp.com
cud1-008617: guid = 578EB07E-BB9A-46B5-B1AE-9D8B89C9EA4A
cud1-008618: guid = 9D4AFD03-036F-4427-B3BF-A18F566A3174
cud1-008619: guid = 81501FB2-A4C5-4219-8230-7F2D0BC30AEC
cud1-008620: guid = 0C385590-9973-471A-8C56-816153AD373C
cud1-008621: guid = FBF7F10F-6E46-438D-AF58-A124986C2AE8
cud2-006245: guid = B9F731DF-93B5-4E41-BBEC-ED5024D4DA96
cud2-006246: guid = 5FCA37AE-AC22-4A4A-9C78-1BB3E14676B2
cud2-006247: guid = AA012430-0141-4A98-BFF6-699D7AF0DFFD

END
read -p "Enter search head name or F5 (splunk-restapi-qa.dev.mycorp.com)? " node
}

##########
# M A I N
##########
echo -en "Enter your ${bold_yellow}first.last${reset_color}: "
read user
read -sp "Password: " key

show_SH_list

while [ 1 ]
do
  echo $node|grep -q 'mycorp'
  if [[ "$?" = "0" ]]
  then
   node_fqdn=$node
  else
     node_fqdn=$(host ${node}|awk '{print $1}')
  fi
  echo "Authenticating ${user} via ${node}: "

  get_sessionKey
  [[ -z ${sessionKey} ]] && echo "User: ${user} | Authentication failed. Abort" && exit
  
  echo "sessionKey=${sessionKey}"
  echo
  echo "Running search and getting sid ...."

  get_sid
  echo -en "sid=${bold_yellow}${sid}${reset_color}"
  echo
  echo -e "Retrieve ad-hoc search status with sid: ${bold_yellow}${sid}${reset_color}"
  get_dispatchState ${sid}
  echo dispatchState=${dispatchState}

  while [[ "${dispatchState}" != "DONE" ]] 
  do
    echo "let's wait for 10 seconds ..."
    sleep 10s
    get_dispatchState ${sid}
    echo dispatchState=${dispatchState}
  done
  echo
  echo "Getting results ..."
  echo
  get_results ${sid}
  #echo "results=`echo ${results}|head -1`"
  echo "results=${results}"
  echo

  read -p "Try again with F5 LB $node (Y|N)? " ans
  case $ans in
       Y|y )
            show_SH_list
            ;;
         * )
            echo "Good Bye"
            exit
            ;;
    esac
done
