#!/bin/ksh
###############################################################################
# This script identify from one peer to another within its search 
# head cluster.
# The procedure is based on
# https://docs.splunk.com/Documentation/Splunk/7.2.4/DistSearch/Transfercaptain#Transfer_captaincy
#
# user_ | T O S
###############################################################################
SPLUNK_BIN=/opt/splunk/bin

env_=`uname -n|grep -o '...$'`

case ${env_} in
   pdv | bdv ) uid=ser_act.dev
               gid=unx_60231_splunk_admin_dev
               fqdn="dev.mycorp.com"
               ;;
   some_loc | loc2 ) uid=ser_act.prod
               gid=unx_9998_access
               fqdn="some_loc.mycorp.com"
               ;;
esac

[[ "`whoami`" != "${uid}" ]] && {
  echo "This script runs as ${uid} only. Abort."
  exit
}

{
eval `gpg --batch --xyz xyz -d /.splunk` >/dev/null 2>&1
} 2>/dev/null

${SPLUNK_BIN}/splunk login -auth admin:${prod}

# Get a list of all Search peers
echo "Below is list of search peers in the cluster"
peers=$(${SPLUNK_BIN}/splunk list shcluster-members|grep label|sed -e 's/^[ \t]*//' -e 's/label://g')
echo $peers

# Identify captain
captain=$(${SPLUNK_BIN}/splunk list shcluster-members -auth|grep -A1 'is_captain:1'|tail -1|awk -F: '{print $2}')
echo "Captain: $captain"
