#!/bin/bash

get_pass ()
{
  {
    #eval `gpg --batch --xyz xyz -quiet --no-verbose -d /.splunk` >/dev/null 2>&1
    eval `gpg --batch --xyz xyz -quiet --no-verbose -d ./.splunk` >/dev/null 2>&1
  } 2>/dev/null
}

get_current_splunk_admin ()
{
  #gpg --batch --xyz xyz -quiet --no-verbose -d /.splunk 2>/dev/null
  gpg --batch --xyz xyz -quiet --no-verbose -d ./.splunk 2>/dev/null
}

set_new_passwd ()
{
  echo "Below is the current ${env_} splunk admin password:"
  echo
  echo "--------------------------"
  get_current_splunk_admin
  echo "--------------------------"
  get_pass
  echo
  get_new_passwd
  if [[ "${pass1}" = "${pass2}" ]]
  then
     echo
     echo "Below is new splunk ${platform} ${env_} admin/kafka service password:"
     echo
     cat /tmp/$$
     echo
     echo -n "Hit ENTER to continue... "
     read me
     [[ -f ./.splunk.gpg ]] && rm -f ./.splunk.gpg
     cat /tmp/$$ | gpg -c --batch --xyz xyz  -o .splunk.gpg -
     echo
     echo "Output: .splunk.gpg"
     echo
     echo "Verifying .splunk.gpg:"
     echo
     echo "--------------------------"
     gpg --batch --xyz xyz -quiet --no-verbose -d ./.splunk.gpg  2>/dev/null
     echo "--------------------------"
     echo
     echo "Next, rename .splunk.gpg to .splunk then push to / on all ${env_} Splunk system"
     echo "rm -f /tmp/$$"
  else
     echo "ERROR: Incorrect new ${env_} Splunk admin password setting. Abort."
     exit 1
  fi
}

get_new_passwd ()
{
  echo -n "Enter new password? "
  read pass1
  echo -n "Enter new password again? "
  read pass2

  case ${sk} in
     S|s )
           platform=Splunk
           case ${env_} in 
                DEV_QA )
                        new_dev=${pass2}
                        dev_before=${dev}
                        cat<<END >/tmp/$$
dev='${new_dev}'
dev_before='${dev}'
prod='${prod}'
prod_before='${prod_before}'
kafka_prod='${kafka_prod}'
kafka_prod_before='${kafka_prod_before}'
kafka_dev='${kafka_dev}'
kafka_dev_before='${kafka_dev_before}'
END
                        ;;
                  PROD )
                        new_prod=${pass2}
                        prod_before=${prod}
                        cat<<END >/tmp/$$
dev='${dev}'
dev_before='${dev_before}'
prod='${new_prod}'
prod_before='${prod}'
kafka_prod='${kafka_prod}'
kafka_prod_before='${kafka_prod_before}'
kafka_dev='${kafka_dev}'
kafka_dev_before='${kafka_dev_before}'
END
                        ;;
           esac
           ;;
     K|k )
           platform=Kafka
           case ${env_} in
                DEV_QA )
                        new_dev_kafka=${pass2}
                        dev_kafka_before=${kafka_dev}
                        cat<<END >/tmp/$$
dev='${dev}'
dev_before='${dev_before}'
prod='${prod}'
prod_before='${prod_before}'
kafka_prod='${kafka_prod}'
kafka_prod_before='${kafka_prod_before}'
kafka_dev='${new_dev_kafka}'
kafka_dev_before='${dev_kafka_before}'
END
                        ;;
                  PROD )
                        new_prod_kafka=${pass2}
                        prod_kafka_before=${kafka_prod}
                        cat<<END >/tmp/$$
dev='${dev}'
dev_before='${dev_before}'
prod='${prod}'
prod_before='${prod_before}'
kafka_prod='${new_prod_kafka}'
kafka_prod_before='${prod_kafka_before}'
kafka_dev='${kafka_dev}'
kafka_dev_before='${kafka_dev_before}'
END
                        ;;
           esac

           ;;
  esac
}

##########
# M A I N
##########
echo
echo -n "Rotate service account password for [S]plunk or [K]afka? "
read sk 
echo -n "Enter [D]ev or [P]rod? "
read input
echo
case $input in
     D|d )
          env_='DEV_QA'
          set_new_passwd
          ;;
     P|p )
          env_='PROD'
          set_new_passwd
          ;;
       * )
          echo "Enter D|d|P|p only!."
          ;;

esac
