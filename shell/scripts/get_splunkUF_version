#!/bin/ksh
date_=`date '+%Y%m%d'`
{

usage ()
{
  cat<<END
 
Usage: $0 [[ -a node1,node2,node3,...,noden ]|[ -f fullpath_filename ]]
 
Where: -a node1,node2,node3,...,noden separated by comma (,)
       -f fullpath_filename
 
END
  exit 1
}

get_splunkuf_version ()
{
  echo -n "$line: "
  curl -k -s -u admin:${fwdr_passwd} https://${fwdr_ip}:8089/services/apps/local|grep '<generator'| grep 'version='
  [[ "$?" != "0" ]] && {
    echo -n "NEW "
    curl -k -s -u admin:${splunkuf} https://${fwdr_ip}:8089/services/apps/local|grep '<generator'| grep 'version='
    [[ "$?" != "0" ]] && echo " :https port UNREACHABLE"
  }
}

##########
# M A I N
##########

if [[ "$#" = "0" ]]
then
   echo "Enter node(s) name separate by comma (,), or"
   echo -n "Full path Filename which contains nodes? "
   read nodes
else
   while [[ $# -gt 0 ]]
   do
     case $1 in
        -a ) nodes=$2
             shift
             ;;
        -f ) nodes=$2
             shift
             ;;
      -*|* )
             usage
             ;;
     esac
     shift
   done
fi

# Is it a filename or hostnames?
splunkuf=$(./.splunkuf)
echo $nodes|grep '/' >/dev/null
if [[ "$?" = "0" ]]
then
  # Check if file exists
  if [[ -f ${nodes} ]]
  then
     nodes=`awk -F: '{print $1}' ${nodes}|grep -v '^#'|uniq`
     nodes_=$nodes
  else
     echo "${nodes} doesnot exist!"
     exit 1
  fi
else
  nodes=${nodes//,/ }
  nodes_=$nodes
fi

for line in $nodes_
do
    # Is it pingable
    ping -c1 $line |grep '100% packet loss' >/dev/null
    if [[ "$?" != "0" ]]
    then
      # Is it numeric or alphabet
      if [[ `echo $line | grep [a-zA-Z]` ]]
      then
          fwdr_passwd=`echo $line|awk -F. '{print $1}'`
          fwdr_ip=`host $line|awk '{print $NF}'`
          echo $fwdr_ip|grep 'NXDOMAIN' >/dev/null
          if [[ "$?" = "0" ]]
          then
             echo "Skip $line since IP is not in DNS"
          else
             get_splunkuf_version
          fi
      else
          # Do a reverse DNS lookup
          fwdr_passwd=`host $line|awk '{print $NF}'|awk -F. '{print $1}'`
          get_splunkuf_version
      fi
    else
       echo "$line is NOT pingable"
    fi
done
} | tee /tmp/`basename $0`.${date_}.OUT
echo "OUTPUT: /tmp/`basename $0`.${date_}.OUT"
