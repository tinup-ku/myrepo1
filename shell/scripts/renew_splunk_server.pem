#!/bin/ksh
###################################################################################
# This script renews expired splunk's ${SPLUNK_AUTH}/server.pem                   #
# Run this script from Splunk Control server as root                              #
# jldsh -ew ${hostname} -s ./renew_splunk_server.pem                              #
# user_ | T.O.S Platform A                                    #
###################################################################################
SPLUNK_BIN=/opt/splunk/bin
SPLUNK_AUTH=/opt/splunk/etc/auth

env_=`uname -n|grep -o '...$'`

case ${env_} in
   pdv | bdv ) FQDN=dev.mycorp.com
               UID=ser_act.dev
               ;;
   some_loc | loc2 ) FQDN=some_loc.mycorp.com
               UID=ser_act.prod
               ;;
           * )
               case `uname -n` in
                   ser2* ) UID=ser_act.prod
                          FQDN=us.global.mycorp.com
                           ;;
                   cud*| cut* ) UID=ser_act.dev
                                FQDN=us.global.mycorp.com
                           ;;
               esac
               ;;
esac

# Check if /opt/splunk's UID is as defined above

uid=`ls -ld /opt/splunk|awk '{print $3}'`

if [[ "${uid}" = "${UID}" ]]
then
   su - ${UID} -c "${SPLUNK_BIN}/splunk login -auth admin:`uname -n`;${SPLUNK_BIN}/splunk createssl server-cert -d ${SPLUNK_AUTH} -n `uname -n` -c ${FQDN} -l 2048"
else
   ${SPLUNK_BIN}/splunk login -auth admin:`uname -n`;${SPLUNK_BIN}/splunk createssl server-cert -d ${SPLUNK_AUTH} -n `uname -n` -c ${FQDN} -l 2048
fi

# Verify
cd ${SPLUNK_AUTH} && {
if [[ -f "`uname -n`.pem" ]]
then
     echo "Rename `uname -n`.pem to server.pem"
     mv -f `uname -n`.pem server.pem
     echo
     echo "Validating new server.pem"
     openssl x509 -in server.pem -noout -dates
else
     echo "`uname -n`.pem NOT generated."
fi
}
